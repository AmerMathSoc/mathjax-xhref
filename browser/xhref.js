(()=>{"use strict";var e={d:(t,r)=>{for(var a in r)e.o(r,a)&&!e.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:r[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{configuration:()=>f});const r=("undefined"!=typeof window?window:global).MathJax._.components.global,a=(r.GLOBAL,r.isObject,r.combineConfig,r.combineDefaults,r.combineWithMathJax),n=(r.MathJax,MathJax._.input.tex.NodeUtil.default),o=MathJax._.input.tex.Configuration,i=o.Configuration,c=(o.ConfigurationHandler,o.ParserConfiguration,MathJax._.input.tex.TokenMap),p=(c.parseResult,c.AbstractTokenMap,c.RegExpMap,c.AbstractParseMap,c.CharacterMap,c.DelimiterMap,c.MacroMap,c.CommandMap);c.EnvironmentMap;let d={};d.xhref=function(e,t){const r=e.GetBrackets(t),a=e.GetArgument(t),o=function(e,t){const r=e.ParseArg(t);if(!n.isInferred(r))return r;const a=n.getChildren(r);if(1===a.length)return a[0];const o=e.create("node","mrow");return n.copyChildren(r,o),n.copyAttributes(r,o),o}(e,t);let i=e.create("node","mpadded",[o],{height:"+4px",depth:"+4px",width:"+4px",lspace:"2px",href:a,"data-ams-ref":r});e.Push(i)},new p("xhref-macros",{xhref:"xhref"},d);const f=i.create("xhref",{handler:{macro:["xhref-macros"]}});MathJax.loader&&MathJax.loader.checkVersion("[ams]/xhref","4.0.0-rc.4","tex-extension"),a({_:{xhref:t}})})();