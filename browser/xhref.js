(()=>{"use strict";var e={d:(t,a)=>{for(var r in a)e.o(a,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:a[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{configuration:()=>f});const a=("undefined"!=typeof window?window:global).MathJax._.components.global,r=(a.GLOBAL,a.isObject,a.combineConfig,a.combineDefaults,a.combineWithMathJax),n=(a.MathJax,MathJax._.input.tex.NodeUtil.default),o=MathJax._.input.tex.Configuration,i=o.Configuration,c=(o.ConfigurationHandler,o.ParserConfiguration,MathJax._.input.tex.TokenMap),p=(c.parseResult,c.AbstractTokenMap,c.RegExpMap,c.AbstractParseMap,c.CharacterMap,c.DelimiterMap,c.MacroMap,c.CommandMap);c.EnvironmentMap;let d={};d.xhref=function(e,t){const a=e.GetBrackets(t),r=e.GetArgument(t),o=function(e,t){const a=e.ParseArg(t);if(!n.isInferred(a))return a;const r=n.getChildren(a);if(1===r.length)return r[0];const o=e.create("node","mrow");return n.copyChildren(a,o),n.copyAttributes(a,o),o}(e,t);let i=e.create("node","mpadded",[o],{height:"+4px",depth:"+4px",width:"+4px",lspace:"2px",href:r,"data-ams-ref":a});e.Push(i)},new p("xhref-macros",{xhref:"xhref"},d);const f=i.create("xhref",{handler:{macro:["xhref-macros"]}});MathJax.loader&&MathJax.loader.checkVersion("[ams]/xhref","4.0.0-beta.4","tex-extension"),r({_:{xhref:t}})})();